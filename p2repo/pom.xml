<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jactr</groupId>
		<artifactId>parent</artifactId>
		<version>2.0.0</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>
	<groupId>org.jactr</groupId>
	<artifactId>p2repo</artifactId>
	<version>2.0.0</version>
	<name>p2 Repo</name>
	<description>Creates a P2 repository (a.k.a. update site) that provides the Maven artifacts in
	the group org.jactr and their dependencies as Eclipse plugins.</description>
	<url>http://monochromata.de/maven/sites/org.jactr/</url>
	<packaging>pom</packaging>

	<properties>
		<maven.deploy.skip>true</maven.deploy.skip>
		<maven.site.deploy.skip>true</maven.site.deploy.skip>
		<apache_license_20_file>${basedir}/Apache_License_2.0.txt</apache_license_20_file>
		<!-- TODO: Remove again: temporarily skipping jarsigner that signs after md5 checksums is artifacts.jar -->
		<jarsigner.skip>true</jarsigner.skip>
	</properties>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-3.0.en.html</url>
			<comments>Note that this license applies to the Maven files that create the p2 repository and
			to the Maven artifacts in the org.jactr group, but not necessarily to the dependencies
			also provided by p2 repository!</comments>
		</license>
	</licenses>

	<pluginRepositories>
		<pluginRepository>
			<id>reficio</id>
			<url>http://repo.reficio.org/maven/</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- Dependencies are only listed to have p2repo built after all projects 
		included in it. -->
	<dependencies>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>modules.threaded</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>modules.temporal</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>modules.versioned</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>scripting</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>sensors</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>tools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>tools.experiment</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>tools.masterslave</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jactr</groupId>
			<artifactId>tools.shell</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Read license files into properties -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								def al2File = new
								File(project.properties.apache_license_20_file)
								project.properties.apache_license_20 = al2File.getText()
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Generate the bundles -->
			<plugin>
				<groupId>org.reficio</groupId>
				<artifactId>p2-maven-plugin</artifactId>
				<version>1.2.0-SNAPSHOT</version>
				<executions>
					<execution>
						<id>pack-site</id>
						<phase>package</phase>
						<goals>
							<goal>site</goal>
						</goals>
						<configuration>
							<pedantic>true</pedantic>
							<categoryFileURL>${basedir}/category.xml</categoryFileURL>
							<artifacts>
								<!-- Duplicates the dependencies from the dependenciesManagement 
									section of the parent POM -->
								<artifact>
									<id>junit:junit:${junit.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.hamcrest:hamcrest-all:${hamcrest.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jmock:jmock:${jmock.version}</id>
									<source>true</source>
									<instructions>
										<Require-Bundle>org.hamcrest.core;bundle-version="${hamcrest.version}",org.junit;bundle-version="${junit.version}.0"</Require-Bundle>
										<Import-Package>bsh,org.objectweb.asm</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jmock:jmock-junit4:${jmock.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jmock:jmock-testjar:${jmock.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>nl.jqno.equalsverifier:equalsverifier:${equalsverifier.version}</id>
									<source>true</source>
								</artifact>
								<!-- TODO: Update the list of artifacts -->
								<artifact>
									<id>org.javolution:javolution-core-java:${javolution.core.java.version}</id>
									<source>true</source>
									<!-- Override the existing Manifest to remove unavailable packages 
										that were originally imported -->
									<override>true</override>
									<instructions>
										<Bundle-Activator>javolution.osgi.internal.JavolutionActivator</Bundle-Activator>
										<Bundle-Description>Javolution - Java Solution for Real-Time
											and Embedded Systems. This project provides a Java library
											and a (mirror) C++ library. Both libraries are maven-based
											and can be used to build multi-platform real-time
											applications or to port Java applications to C++. The C++
											library contains already a port of OSGi and JUnit
											(demonstrated by the subproject test-cpp).</Bundle-Description>
										<Bundle-DocURL>http://javolution.org</Bundle-DocURL>
										<Bundle-License>http://javolution.org/LICENSE.txt</Bundle-License>
										<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
										<Bundle-Name>Javolution Core (Java)</Bundle-Name>
										<Bundle-SymbolicName>org.javolution.core-java</Bundle-SymbolicName>
										<Bundle-Vendor>Javolution</Bundle-Vendor>
										<Bundle-Version>6.0.0</Bundle-Version>
										<!-- The use of sun.nio.ch was removed from javolution.io -->
										Export-Package:
										javolution.text;uses:="javolution.util.function,javolution.lang,javolution.util,javolution.xml,javolution.context";version="6.0.0",javolution.context;uses:="javolution.lang";version="6.0.0",javolution.xml.ws;uses:="javolution.xml.stream,javolution.xml,javolution.io,javolution.text";version="6.0.0",javolution.test;uses:="javolution.lang,javolution.util,javolution.text,javolution.context";version="6.0.0",javolution.io;uses:="javolution.text,javolution.lang,javolution.context";version="6.0.0",javolution.xml.sax;uses:="javolution.text,org.xml.sax,javolution.xml.stream";version="6.0.0",javolution.util;uses:="javolution.util.service,javolution.lang,javolution.util.function,javolution.text";version="6.0.0",javolution.xml.stream;uses:="javolution.text,javolution.lang";version="6.0.0",javolution.util.service;uses:="javolution.util.function";version="6.0.0",javolution.xml;uses:="javolution.util,javolution.util.function,javolution.text,javolution.lang,javolution.xml.stream,javolution.context,javolution.xml.sax";version="6.0.0",javolution.util.function;uses:="javolution.lang";version="6.0.0",javolution.lang;uses:="javolution.text,javolution.context";version="6.0.0",org.osgi.service.log;uses:="org.osgi.framework";version="1.3"
										<Export-Service>javolution.xml.stream.XMLInputFactory,javolution.xml.stream.XMLOutputFactory</Export-Service>
										<!-- The originally imported sun.nio.ch was removed -->
										<Import-Package>javolution.io,javolution.util.service,javolution.xml.stream,org.osgi.framework;version="[1.6,2)",org.osgi.service.log;version="[1.3,2)",org.osgi.util.tracker;version="[1.5,2)",org.xml.sax</Import-Package>
									</instructions>
								</artifact>
								<artifact>
									<!-- TODO: Update to version 1.3.1 -->
									<id>commons-cli:commons-cli:1.2</id>
									<source>true</source>
									<!-- Is already a bundle, hence no instructions are specified. -->
								</artifact>
								<artifact>
									<!-- TODO: Update to org.apache.commons:commons-collections4:4.1 -->
									<id>commons-collections:commons-collections:3.2.1</id>
									<source>true</source>
									<!-- Is already a bundle, hence no instructions are specified. -->
								</artifact>
								<artifact>
									<id>commons-primitives:commons-primitives:1.0</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<!-- TODO: Will be superseded by a feature defined below when p2-maven-plugin 
									supports feature definitions -->
								<artifact>
									<id>commons-logging:commons-logging:${commons.logging.version}</id>
									<source>true</source>
									<instructions>
										<!-- Ignoring non-satisfiable imports for org.apache.log, javax.servlet 
											and org.apache.avalon.framework.logger -->
										<Import-Package>org.apache.log4j</Import-Package>
										<!-- Ignoring uses-statements for org.apache.commons.logging.impl: 
											org.apache.log,org.apache.avalon.framework.logger,javax.servlet -->
										<Export-Package>org.apache.commons.logging;uses:="org.apache.commons.logging.impl",org.apache.commons.logging.impl;uses:="org.apache.commons.logging,org.apache.log4j"</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.apache.commons:commons-math:${commons.math.version}</id>
									<source>true</source>
									<!-- Is already a bundle, hence no instructions are specified. -->
								</artifact>
								<artifact>
									<id>org.mozilla:rhino:${rhino.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.beanshell:bsh-core:${beanshell.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
								<artifact>
									<id>org.antlr:antlr:${antlr.version}</id>
									<source>true</source>
									<instructions>
										<Import-Package>*</Import-Package>
										<Export-Package>*</Export-Package>
									</instructions>
								</artifact>
<!-- 								<artifact> -->
<!-- 									<id>org.slf4j:slf4j-api:${slf4j.version}</id> -->
<!-- 									<source>true</source> -->
<!-- 									Is already a bundle, hence no instructions are specified. -->
<!-- 								</artifact> -->
<!-- 								<artifact> -->
<!-- 									<id>org.slf4j:slf4j-nop:${slf4j.version}</id> -->
<!-- 									<source>true</source> -->
<!-- 									Is already a bundle, hence no instructions are specified. -->
<!-- 								</artifact> -->
								<artifact>
									<id>org.jactr:core:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R Core</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.core</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in core POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",commons-primitives;bundle-version="${commons.primitives.version}",${commons.collections.bundle.symbolic.name};bundle-version="${commons.collections.version}",org.commonreality.api;bundle-version="${commonreality.version}",org.commonreality.core;bundle-version="${commonreality.version}",org.commonreality.modalities;bundle-version="${commonreality.version}",org.commonreality.net;bundle-version="${commonreality.version}",org.commonreality.sensors;bundle-version="${commonreality.version}",org.commonreality.time;bundle-version="${commonreality.version}", org.javolution;bundle-version="${javolution.version}",org.javolution.core-java;bundle-version="${javolution.core.java.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,commons-primitives,${commons.collections.bundle.symbolic.name},org.commonreality.api,org.commonreality.core,org.commonreality.modalities,org.commonreality.net,org.commonreality.sensors,org.commonreality.time, org.javolution,org.javolution.core-java</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:io:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R IO</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.io</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in io POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",org.antlr;bundle-version="${antlr.version}",org.commonreality.core;bundle-version="${commonreality.version}",org.javolution;bundle-version="${javolution.version}",org.javolution.core-java;bundle-version="${javolution.core.java.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.scripting;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,org.antlr,org.commonreality.core,org.javolution,org.javolution.core-java,org.jactr.core,org.jactr.scripting</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:modules.threaded:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>Threaded-cognition plug-in for jACT-R</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.modules.threaded</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in modules.threaded POM -->
										<Require-Bundle>org.jactr.core;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>org.jactr.core</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:modules.temporal:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>Temporal plug-in for jACT-R</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.modules.temporal</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in modules.temporal POM -->
										<Require-Bundle>org.jactr.core;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>org.jactr.core</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:modules.versioned:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>Versioned modules for jACT-R</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.modules.versioned</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in modules.versioned POM -->
										<Require-Bundle>org.antlr;bundle-version="${antlr.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.io;bundle-version="${jactr.version}",org.jactr.tools;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>org.antlr,org.jactr.core,org.jactr.io,org.jactr.tools</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:scripting:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>Scripting for jACT-R</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.scripting</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in scripting POM -->
										<Require-Bundle>org.jactr.core;bundle-version="${jactr.version}",org.mozilla.rhino;bundle-version="${rhino.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>org.jactr.core,org.mozilla.rhino</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:sensors:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R-specific commonreality sensors</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.sensors</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in sensors POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",org.commonreality.api;bundle-version="${commonreality.version}",org.commonreality.modalities;bundle-version="${commonreality.version}",org.commonreality.sensors.swing;bundle-version="${commonreality.version}",org.commonreality.sensors.xml;bundle-version="${commonreality.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.io;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,org.commonreality.api,org.commonreality.modalities,org.commonreality.sensors.swing,org.commonreality.sensors.xml,org.jactr.core,org.jactr.io</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:tools:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R tools</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.tools</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in tools POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",${commons.cli.bundle.symbolic.name};bundle-version="${commons.cli.version}",${commons.math.bundle.symbolic.name};bundle-version="${commons.math.version}",org.commonreality.netty;bundle-version="${commonreality.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.io;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,${commons.cli.bundle.symbolic.name},${commons.math.bundle.symbolic.name},org.commonreality.netty,org.jactr.core,org.jactr.io</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:tools.experiment:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R's general experiment framework</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.tools.experiment</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in tools.experiment POM -->
										<Require-Bundle>org.commonreality.sensors.xml;bundle-version="${commonreality.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.tools;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>org.commonreality.sensors.xml,org.jactr.core,org.jactr.tools</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:tools.masterslave:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R Master-slave tools</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.tools.masterslave</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in tools.masterslave POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",org.jactr.core;bundle-version="${jactr.version}",org.jactr.io;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,org.jactr.core,org.jactr.io</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
								<artifact>
									<id>org.jactr:tools.shell:${jactr.version}</id>
									<source>true</source>
									<singleton>true</singleton>
									<instructions>
										<Bundle-ManifestVersion>${bundle.manifest.version}</Bundle-ManifestVersion>
										<Bundle-Name>jACT-R Beanshell plug-in</Bundle-Name>
										<Bundle-SymbolicName>org.jactr.tools.shell</Bundle-SymbolicName>
										<Bundle-Version>${jactr.version}</Bundle-Version>
										<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
										<Bundle-RequiredExecutionEnvironment>${bundle.required.execution.environment}</Bundle-RequiredExecutionEnvironment>
										<!-- Needs to be kept in sync with dependencies in tools.shell POM -->
										<Require-Bundle>commons-logging;bundle-version="${commons.logging.version}",org.beanshell.bsh-core;bundle-version="${beanshell.bundle.version}",org.jactr.core;bundle-version="${jactr.version}"</Require-Bundle>
										<Eclipse-RegisterBuddy>commons-logging,org.beanshell.bsh-core,org.jactr.core</Eclipse-RegisterBuddy>
										<Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
										<Export-Package>*</Export-Package>
										<Bundle-ClassPath>.</Bundle-ClassPath>
										<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									</instructions>
								</artifact>
							</artifacts>
							<!-- TODO: Ineffective until https://github.com/reficio/p2-maven-plugin/pull/75 
								gets merged -->
							<featureDefinitions>
								<feature>
									<id>commons-logging.feature</id>
									<version>${commons.logging.version}</version>
									<label>Commons Logging</label>
									<providerName>Apache Software Foundation</providerName>
									<!-- Description taken from http://commons.apache.org/proper/commons-logging/index.html -->
									<description>The Logging package is an ultra-thin bridge
										between different logging implementations. A library that uses
										the commons-logging API can be used with any logging
										implementation at runtime. Commons-logging comes with support
										for a number of popular logging implementations, and writing
										adapters for others is a reasonably simple task.</description>
									<!-- Copyright taken from commons-logging-1.1.1.jar:/META-INF/NOTICE -->
									<copyright>Commons Logging
										Copyright 2001-2007 The Apache
										Software Foundation

										This product includes/uses software(s)
										developed by 'an unknown
										organization'
										- Unnamed -
										avalon-framework:avalon-framework:jar:4.1.3
										- Unnamed -
										log4j:log4j:jar:1.2.12
										- Unnamed - logkit:logkit:jar:1.0.1</copyright>
									<license>${apache_license_20}</license>
									<generateSourceFeature>true</generateSourceFeature>
									<artifacts>
										<artifact>
											<id>commons-logging:commons-logging:${commons.logging.version}</id>
											<source>true</source>
											<instructions>
												<!-- Ignoring non-satisfiable imports for org.apache.log, javax.servlet 
													and org.apache.avalon.framework.logger -->
												<Import-Package>org.apache.log4j</Import-Package>
												<!-- Ignoring uses-statements for org.apache.commons.logging.impl: 
													org.apache.log,org.apache.avalon.framework.logger,javax.servlet -->
												<Export-Package>org.apache.commons.logging;uses:="org.apache.commons.logging.impl",org.apache.commons.logging.impl;uses:="org.apache.commons.logging,org.apache.log4j"</Export-Package>
											</instructions>
										</artifact>
									</artifacts>
								</feature>
								<!-- TODO: Add feature definitions for org.jactr etc. -->
							</featureDefinitions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Sign the bundles / plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<keystore>${jarsigner.keystore.path}</keystore>
					<!-- Remaining configuration loaded from settings.xml -->
					<storepass>${jarsigner.keystore.password}</storepass>
					<alias>${jarsigner.key.alias}</alias>
					<keypass>${jarsigner.key.password}</keypass>
					<!-- Only jactr JARs will be signed, dependencies will not be signed. -->
					<archiveDirectory>${project.build.directory}/repository</archiveDirectory>
					<includes>
						<include>plugins/org.jactr.*ar</include>
						<include>artifacts.jar</include>
						<include>content.jar</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>sign</id>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Upload the P2 repository -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>upload-P2</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}/repository</fromDir>
							<includes>*/**</includes>
							<serverId>${jactr.ftp.server}</serverId>
							<url>${jactr.p2repo.upload.url}</url>
							<!-- <toDir></toDir> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<extensions>
			<!-- Enabling the use of SFTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.9</version>
			</extension>
		</extensions>
	</build>

</project>
